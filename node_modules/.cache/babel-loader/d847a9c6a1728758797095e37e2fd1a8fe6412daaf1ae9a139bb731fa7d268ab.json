{"ast":null,"code":"var _jsxFileName = \"/Users/michaelduggan/KPI-AUDIT-TOOL/src/components/KPIAuditTool.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport SummaryStats from './SummaryStats';\nimport DepartmentSelector from './DepartmentSelector';\nimport RecommendedMetrics from './RecommendedMetrics';\nimport MetricsToReconsider from './MetricsToReconsider';\nimport { analyzeMetrics } from '../utils/analysisUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KPIAuditTool = ({\n  uploadedFile\n}) => {\n  _s();\n  const [metricsData, setMetricsData] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalMetrics: 0,\n    vanityMetrics: 0,\n    percentVanity: 0\n  });\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        let data;\n        if (uploadedFile) {\n          // Use uploaded file\n          data = await readFileContent(uploadedFile);\n        } else {\n          // Use sample data\n          const response = await fetch('/sample-data.csv');\n          data = await response.text();\n        }\n        Papa.parse(data, {\n          header: true,\n          skipEmptyLines: true,\n          complete: results => {\n            processData(results.data);\n          }\n        });\n      } catch (error) {\n        console.error('Error loading data:', error);\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [uploadedFile]);\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => resolve(event.target.result);\n      reader.onerror = error => reject(error);\n      reader.readAsText(file);\n    });\n  };\n  const processData = data => {\n    setMetricsData(data);\n    const analysis = analyzeMetrics(data);\n    setAnalysisResults(analysis);\n\n    // Calculate stats\n    let totalVanityMetrics = 0;\n    let totalMetrics = data.length;\n    Object.keys(analysis).forEach(dept => {\n      totalVanityMetrics += analysis[dept].vanityMetrics.length;\n    });\n    setStats({\n      totalMetrics,\n      vanityMetrics: totalVanityMetrics,\n      percentVanity: Math.round(totalVanityMetrics / totalMetrics * 100)\n    });\n\n    // Set default selected department\n    setSelectedDepartment(Object.keys(analysis)[0]);\n    setLoading(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg font-medium text-indigo-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin -ml-1 mr-3 h-8 w-8 text-indigo-600 inline\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \"Loading KPI data...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-6xl mx-auto bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-indigo-800 mb-2\",\n        children: \"AI-Powered KPI Audit Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-indigo-600 font-medium\",\n        children: \"Identify and replace metrics that don't drive outcomes with ones that do.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryStats, {\n        stats: stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DepartmentSelector, {\n      departments: analysisResults ? Object.keys(analysisResults) : [],\n      selectedDepartment: selectedDepartment,\n      onSelectDepartment: setSelectedDepartment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), selectedDepartment && analysisResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(RecommendedMetrics, {\n        metrics: analysisResults[selectedDepartment].top3.slice(0, 3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MetricsToReconsider, {\n        metrics: analysisResults[selectedDepartment].vanityMetrics.slice(0, 3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIAuditTool, \"iA1ZYsW7wZQFaaSbQviluVRQimQ=\");\n_c = KPIAuditTool;\nexport default KPIAuditTool;\nvar _c;\n$RefreshReg$(_c, \"KPIAuditTool\");","map":{"version":3,"names":["React","useState","useEffect","Papa","SummaryStats","DepartmentSelector","RecommendedMetrics","MetricsToReconsider","analyzeMetrics","jsxDEV","_jsxDEV","KPIAuditTool","uploadedFile","_s","metricsData","setMetricsData","analysisResults","setAnalysisResults","selectedDepartment","setSelectedDepartment","loading","setLoading","stats","setStats","totalMetrics","vanityMetrics","percentVanity","loadData","data","readFileContent","response","fetch","text","parse","header","skipEmptyLines","complete","results","processData","error","console","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","readAsText","analysis","totalVanityMetrics","length","Object","keys","forEach","dept","Math","round","className","children","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","d","departments","onSelectDepartment","metrics","top3","slice","_c","$RefreshReg$"],"sources":["/Users/michaelduggan/KPI-AUDIT-TOOL/src/components/KPIAuditTool.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport SummaryStats from './SummaryStats';\nimport DepartmentSelector from './DepartmentSelector';\nimport RecommendedMetrics from './RecommendedMetrics';\nimport MetricsToReconsider from './MetricsToReconsider';\nimport { analyzeMetrics } from '../utils/analysisUtils';\n\nconst KPIAuditTool = ({ uploadedFile }) => {\n  const [metricsData, setMetricsData] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalMetrics: 0,\n    vanityMetrics: 0,\n    percentVanity: 0\n  });\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        let data;\n        \n        if (uploadedFile) {\n          // Use uploaded file\n          data = await readFileContent(uploadedFile);\n        } else {\n          // Use sample data\n          const response = await fetch('/sample-data.csv');\n          data = await response.text();\n        }\n        \n        Papa.parse(data, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            processData(results.data);\n          }\n        });\n      } catch (error) {\n        console.error('Error loading data:', error);\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, [uploadedFile]);\n\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = (error) => reject(error);\n      reader.readAsText(file);\n    });\n  };\n\n  const processData = (data) => {\n    setMetricsData(data);\n    const analysis = analyzeMetrics(data);\n    setAnalysisResults(analysis);\n    \n    // Calculate stats\n    let totalVanityMetrics = 0;\n    let totalMetrics = data.length;\n    \n    Object.keys(analysis).forEach(dept => {\n      totalVanityMetrics += analysis[dept].vanityMetrics.length;\n    });\n    \n    setStats({\n      totalMetrics,\n      vanityMetrics: totalVanityMetrics,\n      percentVanity: Math.round((totalVanityMetrics / totalMetrics) * 100)\n    });\n    \n    // Set default selected department\n    setSelectedDepartment(Object.keys(analysis)[0]);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-lg font-medium text-indigo-600\">\n          <svg className=\"animate-spin -ml-1 mr-3 h-8 w-8 text-indigo-600 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Loading KPI data...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto bg-white rounded-lg shadow-lg\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-indigo-800 mb-2\">AI-Powered KPI Audit Tool</h1>\n        <p className=\"text-indigo-600 font-medium\">Identify and replace metrics that don't drive outcomes with ones that do.</p>\n        \n        <SummaryStats stats={stats} />\n      </div>\n\n      <DepartmentSelector \n        departments={analysisResults ? Object.keys(analysisResults) : []}\n        selectedDepartment={selectedDepartment}\n        onSelectDepartment={setSelectedDepartment}\n      />\n\n      {selectedDepartment && analysisResults && (\n        <div className=\"grid md:grid-cols-2 gap-6\">\n          <RecommendedMetrics \n            metrics={analysisResults[selectedDepartment].top3.slice(0, 3)} \n          />\n          \n          <MetricsToReconsider \n            metrics={analysisResults[selectedDepartment].vanityMetrics.slice(0, 3)} \n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default KPIAuditTool;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC;IACjCuB,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC;IAChBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,IAAIC,IAAI;QAER,IAAIhB,YAAY,EAAE;UAChB;UACAgB,IAAI,GAAG,MAAMC,eAAe,CAACjB,YAAY,CAAC;QAC5C,CAAC,MAAM;UACL;UACA,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;UAChDH,IAAI,GAAG,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC9B;QAEA7B,IAAI,CAAC8B,KAAK,CAACL,IAAI,EAAE;UACfM,MAAM,EAAE,IAAI;UACZC,cAAc,EAAE,IAAI;UACpBC,QAAQ,EAAGC,OAAO,IAAK;YACrBC,WAAW,CAACD,OAAO,CAACT,IAAI,CAAC;UAC3B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3ClB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDM,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAElB,MAAMiB,eAAe,GAAIY,IAAI,IAAK;IAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAKL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,MAAM,CAAC;MACvDL,MAAM,CAACM,OAAO,GAAIZ,KAAK,IAAKK,MAAM,CAACL,KAAK,CAAC;MACzCM,MAAM,CAACO,UAAU,CAACX,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMH,WAAW,GAAIV,IAAI,IAAK;IAC5Bb,cAAc,CAACa,IAAI,CAAC;IACpB,MAAMyB,QAAQ,GAAG7C,cAAc,CAACoB,IAAI,CAAC;IACrCX,kBAAkB,CAACoC,QAAQ,CAAC;;IAE5B;IACA,IAAIC,kBAAkB,GAAG,CAAC;IAC1B,IAAI9B,YAAY,GAAGI,IAAI,CAAC2B,MAAM;IAE9BC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAACC,IAAI,IAAI;MACpCL,kBAAkB,IAAID,QAAQ,CAACM,IAAI,CAAC,CAAClC,aAAa,CAAC8B,MAAM;IAC3D,CAAC,CAAC;IAEFhC,QAAQ,CAAC;MACPC,YAAY;MACZC,aAAa,EAAE6B,kBAAkB;MACjC5B,aAAa,EAAEkC,IAAI,CAACC,KAAK,CAAEP,kBAAkB,GAAG9B,YAAY,GAAI,GAAG;IACrE,CAAC,CAAC;;IAEF;IACAL,qBAAqB,CAACqC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/ChC,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,IAAID,OAAO,EAAE;IACX,oBACEV,OAAA;MAAKoD,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eACpDrD,OAAA;QAAKoD,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAClDrD,OAAA;UAAKoD,SAAS,EAAC,wDAAwD;UAACE,KAAK,EAAC,4BAA4B;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,gBACxIrD,OAAA;YAAQoD,SAAS,EAAC,YAAY;YAACK,EAAE,EAAC,IAAI;YAACC,EAAE,EAAC,IAAI;YAACC,CAAC,EAAC,IAAI;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACrGjE,OAAA;YAAMoD,SAAS,EAAC,YAAY;YAACG,IAAI,EAAC,cAAc;YAACW,CAAC,EAAC;UAAiH;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzK,CAAC,uBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEjE,OAAA;IAAKoD,SAAS,EAAC,qDAAqD;IAAAC,QAAA,gBAClErD,OAAA;MAAKoD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBrD,OAAA;QAAIoD,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAC;MAAyB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtFjE,OAAA;QAAGoD,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAyE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAExHjE,OAAA,CAACN,YAAY;QAACkB,KAAK,EAAEA;MAAM;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAENjE,OAAA,CAACL,kBAAkB;MACjBwE,WAAW,EAAE7D,eAAe,GAAGwC,MAAM,CAACC,IAAI,CAACzC,eAAe,CAAC,GAAG,EAAG;MACjEE,kBAAkB,EAAEA,kBAAmB;MACvC4D,kBAAkB,EAAE3D;IAAsB;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAEDzD,kBAAkB,IAAIF,eAAe,iBACpCN,OAAA;MAAKoD,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCrD,OAAA,CAACJ,kBAAkB;QACjByE,OAAO,EAAE/D,eAAe,CAACE,kBAAkB,CAAC,CAAC8D,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eAEFjE,OAAA,CAACH,mBAAmB;QAClBwE,OAAO,EAAE/D,eAAe,CAACE,kBAAkB,CAAC,CAACO,aAAa,CAACwD,KAAK,CAAC,CAAC,EAAE,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9D,EAAA,CApHIF,YAAY;AAAAuE,EAAA,GAAZvE,YAAY;AAsHlB,eAAeA,YAAY;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}